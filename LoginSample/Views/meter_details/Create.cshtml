@model LoginSample.Models.meter_detail

@{
    ViewBag.Title = "Create";
}

<div class="box-typical box-typical-padding">
    <h5 class="m-t-lg with-border">New Meter Details</h5>
    @using (Html.BeginForm("Create", "meter_details", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            @Html.LabelFor(model => model.SiD, "Site Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SiD", null, "Please select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SiD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.HiD, "House No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("HiD", null, "Please select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HiD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IP_Address, "IP Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IP_Address, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownList("DDUiD", null, "Please Select", htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.IP_Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Port, "Port", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.MMiD, "Meter", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MMiD", null, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MMiD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.UiD, "Utility Provider Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UiD", null, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UiD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="ModBus">
            @Html.LabelFor(model => model.MBUS_Device_ID, "ModBus Device ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MBUS_Device_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MBUS_Device_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn" />
            </div>
        </div>
    </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts
{

    <script type="text/javascript">

      
    $(document).ready(function () {
        $("#SiD").change(function () {
            $("#HiD").empty();
            var sid = $("#SiD").val();
            if (sid)
            {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetHouseNo")',
                    dataType: 'json',
                    data: { id: sid },
                    success: function (houses) {
                        $.each(houses, function (i, house) {
                            $("#HiD").append('<option value="' + house.HiD + '">' + house.House_No + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve districts.' + ex);
                    }
                });
            }
            return false;
        })
        });

       
    </script>

}